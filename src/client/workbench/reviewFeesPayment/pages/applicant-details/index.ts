import * as func from './functions';

const pageConfig = [
  {
    title: 'Applicant Details',
    pageId: 'VuBNyMXNgs6w97j9O3Far',
    expanded: true,
    path: '/application-submit',
    template: 'custom',
    props: {
      definitions: [
        {
          componentId: 'H64V42_INbPa40YhyY_kE',
          type: 'text',
          props: {
            variant: 'h3',
            content: "i18n('applicantDetails-title')",
            displayAsHtml: false,
          },
          layout: 'base',
          sharedProps: ['i18n', 'locale'],
        },
        {
          componentId: 'VhPUpHEGXaG4juoSxeSQh',
          type: 'text',
          props: {
            variant: 'p',
            content: "i18n('contact_description')",
            displayAsHtml: false,
            space: {
              marginBottom: 'lg',
            },
          },
          layout: 'base',
          sharedProps: ['i18n', 'locale'],
        },
        {
          componentId: 'ngXq0F5g-WE3L3ZVyahpz',
          type: 'form',
          props: {
            definitions: [
              {
                componentId: 'QuSs7oAl2v-vwkCa7DCTq',
                symbolTitle: 'Symbol 1',
                type: 'symbol',
                props: {
                  symbol: 'Tg2IHCN6ziC51qE0aPQ4n',
                },
                layout: 'base',
              },
            ],
            description: '',
            title: '',
            formValues: '',
            btnSubmitLabel: "i18n('global-next')",
            includeCancelButton: true,
            includeBackButton: true,
            btnBackLabel: "i18n('global-back')",
            validateStatus: {
              valid: true,
              message: '',
            },
            btnSubmitArrow: 'end',
            btnBackArrow: 'start',
            btnSubmitClick: func.f1_btnSubmitClick,
            btnCancelClick: func.f2_btnCancelClick,
            btnBackClick: func.f3_btnBackClick,
          },
          layout: 'base',
          sharedProps: [
            'i18n',
            'locale',
            'history',
            'actions',
            'bpm',
            'analytics',
            'contactName',
            'validateStatus_contact_name',
            'contactNumber',
            'contactEmail',
            'licenceNo',
            'instanceId',
            'user',
            '',
            'actions',
          ],
        },
      ],
      symbols: [
        {
          id: 'XPuuzzSsc1PM7KGrp2LDX',
          name: 'Sidebar',
          definitions: [
            {
              componentId: '_7l1ujJnaZewdBciJZUoA',
              type: 'stepTracker',
              props: {
                title: "i18n('process')",
                steps: '${state.steps}',
                expandedStepIndexes: '${state.expandedStepIndexes}',
                currentStepIndex: '${state.currentStepIndex}',
                i18n: '',
                currentSubStepIndex: '${state.currentSubStepIndex}',
                visible: '{"code":" return props.state.showSideBar;"}',
              },
              layout: 'base',
              sharedProps: [
                'i18n',
                'locale',
                'showSideBar',
                'steps',
                'expandedStepIndexes',
                'currentStepIndex',
                'currentSubStepIndex',
              ],
            },
            {
              columnIndex: 0,
              componentId: 'LlS0jKn4mVvWHElTc4DVL',
              type: 'relevantEntity2-0-0',
              props: {
                i18n: '',
                title: "i18n('relevant_entity')",
                entities: [
                  {
                    logo:
                      'https://www.tamm.abudhabi/en/tamm-centers-services/-/media/Project/TAMM/Home/Footer%20Logos/Department%20of%20Economic%20Development',
                    address: "i18n('address')",
                    phones: [],
                    website: 'www.adeconomy.ae',
                    email: 'email@domain.com',
                  },
                ],
                closedAll: false,
                space: {
                  marginTop: 'xl',
                  marginBottom: 'xl',
                },
                visible: '{"code":"  return props.state.showSideBar;"}',
              },
              sharedProps: ['i18n', 'locale', 'showSideBar'],
            },
          ],
        },
        {
          id: 'zUb_2ox3pxzJj2-JHqAh1',
          name: 'Header',
          definitions: [
            {
              componentId: '_0JdDeDuJ9aLzLvOyksSX',
              type: 'flexbox',
              props: {
                flexWrap: true,
                flexDirection: 'column',
                justifyContent: 'initial',
                alignItems: 'initial',
                alignContent: 'initial',
                classNames: 'container',
              },
              layout: 'base',
              children: [
                {
                  componentId: 'QRUGlUhHpBbWipDuiJI1l',
                  type: 'breadcrumb',
                  props: {
                    space: {
                      marginBottom: 'md',
                      marginTop: 'lg',
                    },
                    items: [
                      {
                        id: 'kdmsxtik',
                        label: "i18n('bc_home')",
                        linkTarget: '_self',
                        link: '/',
                      },
                      {
                        id: 'kdmsyjm9',
                        label: "i18n('bc_digitalServices')",
                        link: 'https://www.tamm.abudhabi/tamm-centers-services',
                        linkTarget: '_self',
                      },
                      {
                        id: 'kdmszcbw',
                        label: "i18n('bc_DED')",
                        link:
                          'https://www.tamm.abudhabi/tamm-centers-services/department-of-economic-development',
                        linkTarget: '_self',
                      },
                    ],
                  },
                  parentComponentId: 'no_parent',
                  sharedProps: ['i18n', 'locale'],
                },
                {
                  componentId: '68aenTCGP0X-L3br5r-li',
                  type: 'text',
                  props: {
                    variant: 'h1',
                    content: "i18n('serviceCard-desc')",
                    displayAsHtml: false,
                  },
                  layout: 'base',
                  parentComponentId: 'no_parent',
                  sharedProps: ['i18n', 'locale'],
                },
              ],
            },
          ],
        },
        {
          id: 'Tg2IHCN6ziC51qE0aPQ4n',
          name: 'Application Details',
          definitions: [
            {
              componentId: 'LhJwRzgLi4aDXM62GnjV_',
              type: 'checkbox',
              props: {
                name: '',
                id: '',
                tabIndex: 0,
                autoFocus: false,
                readOnly: false,
                label: "i18n('applicantDetails-checkboxContact')",
                disabled: false,
                uiType: '',
                description: '',
                validateStatus: '',
                meta: '',
                onClick: {
                  type: 'func',
                  actions: [],
                },
                onChange: {
                  type: 'func',
                  actions: [
                    {
                      type: 'customCode',
                      code:
                        "{\"code\":\"  const { locale } = props;\\n  return (value: any) => {\\n    const checkBoxState = props.state.contactDetailsFlag ? false : true;\\n    props.actions.contactDetailsFlag.update(checkBoxState);\\n    if (checkBoxState) {\\n      const name =\\n        locale === 'en'\\n          ? `${props.state.user['First Name EN']} ${props.state.user['Last Name EN']}`\\n          : props.state.user['Full Name AR'];\\n      props.actions.contactName.update(name);\\n      props.actions.contactNumber.update(props.state.user.Mobile);\\n      props.actions.contactEmail.update(props.state.user['User Email']);\\n\\n      // disable all the fields\\n\\n      props.actions.disableContactName.update(true);\\n      props.actions.disableContactNo.update(true);\\n      props.actions.disableContactEmail.update(true);\\n    } else {\\n      props.actions.contactName.update('');\\n      props.actions.contactNumber.update('');\\n      props.actions.contactEmail.update('');\\n      props.actions.disableContactName.update(false);\\n      props.actions.disableContactNo.update(false);\\n      props.actions.disableContactEmail.update(false);\\n    }\\n    props.actions.validateStatus_contact_name.update('');\\n    props.actions.help_contact_name.update('');\\n    props.actions.help_phone_no.update('');\\n    props.actions.validateStatus_phone.update('');\\n    props.actions.help_email.update('');\\n    props.actions.validateStatus_email.update('');\\n  };\",\"shouldCallCustomCode\":true}",
                    },
                  ],
                },
                visible: '',
                checked: '${state.contactDetailsFlag}',
                space: {
                  marginBottom: 'lg',
                },
              },
              layout: 'base',
              sharedProps: [
                'i18n',
                'locale',
                'actions',
                'contactDetailsFlag',
                'user',
                'actions',
              ],
            },
            {
              componentId: 'KDgS-N1IF9731nMY_wf0b',
              type: 'grid',
              props: {
                columns: 2,
                flexColumns: {
                  xl: 2,
                  lg: 2,
                  md: 2,
                  sm: 1,
                },
              },
              layout: 'base',
              children: [
                {
                  componentId: '-F5Om4UcgMI1FACOCanHJ',
                  type: 'input',
                  props: {
                    label: "i18n('applicantDetails-nameField')",
                    value: '${state.contactName}',
                    defaultValue: '${state.contactName}',
                    'aria-label': 'input',
                    validateStatus: '${state.validateStatus_contact_name}',
                    disabled: '${state.contactDetailsFlag}',
                    readonly: false,
                    help: '${state.help_contact_name}',
                    placeholder: '',
                    size: 'default',
                    textDirection: 'ltr',
                    name: '',
                    type: 'text',
                    tabIndex: 0,
                    space: {
                      marginBottom: 'lg',
                      marginTop: '',
                    },
                    onChange: {
                      type: 'func',
                      actions: [
                        {
                          type: 'customCode',
                          code:
                            "{\"code\":\"  return (name: string) => {\\n    props.actions.help_contact_name.update('');\\n    props.actions.validateStatus_contact_name.update('');\\n    if (!props.state.contactDetailsFlag && name.length < 5) {\\n      props.actions.validateStatus_contact_name.update('error');\\n      props.actions.help_contact_name.update(props.i18n('nameValidation'));\\n    }\\n    props.actions.contactName.update(name);\\n  };\",\"shouldCallCustomCode\":true}",
                        },
                      ],
                    },
                    visible: '',
                  },
                  layout: 'base',
                  columnIndex: 0,
                  sharedProps: [
                    'i18n',
                    'locale',
                    'actions',
                    'contactDetailsFlag',
                    'contactName',
                    'validateStatus_contact_name',
                    'help_contact_name',
                    'actions',
                  ],
                },
                {
                  componentId: 'mogeKqZmJSl3N4RYC2bXo',
                  type: 'inputTelephone',
                  props: {
                    i18n: '',
                    help: '${state.help_phone_no}',
                    validateStatus: '${state.validateStatus_phone}',
                    label: "i18n('applicantDetails-numberField')",
                    'aria-label': 'Telephone input',
                    disabled: '${state.contactDetailsFlag}',
                    value: '${state.contactNumber}',
                    code: null,
                    countries: [],
                    size: 'default',
                    defaultValue: {},
                    tabIndex: 0,
                    space: {
                      marginBottom: 'lg',
                    },
                    onSelect: {
                      type: 'func',
                      actions: [
                        {
                          type: 'customCode',
                          code:
                            '{"code":"return(no:any) => {\\n  props.actions.contactNumber.update(no);\\n  props.actions.help_phone_no.update(\'\');\\n  props.actions.validateStatus_phone.update(\'\');\\n}","shouldCallCustomCode":true}',
                        },
                      ],
                    },
                    visible: '',
                  },
                  layout: 'base',
                  columnIndex: 1,
                  sharedProps: [
                    'i18n',
                    'locale',
                    'actions',
                    'help_phone_no',
                    'validateStatus_phone',
                    'contactDetailsFlag',
                    'contactNumber',
                    'actions',
                  ],
                },
                {
                  componentId: 'b11gY1VfcmzxGoY4odcko',
                  type: 'input',
                  props: {
                    label: "i18n('applicantDetails-emailField')",
                    tabIndex: 0,
                    value: '${state.contactEmail}',
                    defaultValue: '${state.contactEmail}',
                    'aria-label': 'input',
                    validateStatus: '${state.validateStatus_email}',
                    disabled: '${state.contactDetailsFlag}',
                    readonly: false,
                    help: '${state.help_email}',
                    placeholder: '',
                    size: 'default',
                    textDirection: 'ltr',
                    name: '',
                    type: 'text',
                    onChange: {
                      type: 'func',
                      actions: [
                        {
                          type: 'customCode',
                          code:
                            '{"code":"return(email:string ) => {\\n  props.actions.contactEmail.update(email);\\n  props.actions.help_email.update(\'\');\\n  props.actions.validateStatus_email.update(\'\');\\n}","shouldCallCustomCode":true}',
                        },
                      ],
                    },
                    space: {
                      marginTop: '',
                      marginBottom: 'lg',
                    },
                    visible: '',
                  },
                  layout: 'base',
                  columnIndex: 0,
                  sharedProps: [
                    'i18n',
                    'locale',
                    'actions',
                    'contactEmail',
                    'validateStatus_email',
                    'contactDetailsFlag',
                    'help_email',
                    'actions',
                  ],
                },
              ],
            },
            {
              componentId: 'l1vTlmYUaaGmRDTA2K8ob',
              type: 'alert',
              props: {
                status: 'error',
                message: '${state.camundaMessage}',
                onClose: null,
                space: {
                  marginTop: 'sm',
                  marginBottom: 'md',
                },
                visible:
                  '{"code":"return props.state.camundaMessage ? true : false;"}',
              },
              layout: 'base',
              sharedProps: ['i18n', 'locale', 'camundaMessage'],
            },
          ],
        },
      ],
      sharedFunctions: {},
    },
    layout: 'sidebar',
    customPath: true,
    requires: [
      {
        type: 'REQUIRES_LOGIN',
        redirectTo: '/login',
      },
    ],
    state: {
      mapState: [
        'user',
        'loggedIn',
        'contactDetailsFlag',
        'camundaMessage',
        'contactName',
        'validateStatus_contact_name',
        'help_contact_name',
        'help_phone_no',
        'validateStatus_phone',
        'contactNumber',
        'contactEmail',
        'validateStatus_email',
        'help_email',
        'showSideBar',
        'steps',
        'expandedStepIndexes',
        'currentStepIndex',
        'currentSubStepIndex',
        'licenceNo',
        'instanceId',
        '',
      ],
      mapDispatch: [
        'contactName',
        'help_contact_name',
        'validateStatus_contact_name',
        'contactNumber',
        'help_phone_no',
        'validateStatus_phone',
        'contactEmail',
        'help_email',
        'validateStatus_email',
        'showSideBar',
        'loading',
        'currentStepIndex',
        'expandedStepIndexes',
        'steps',
        'camundaMessage',
        'disableContactName',
        'disableContactNo',
        'disableContactEmail',
        'contactDetailsFlag',
        'instanceId',
        'businessKey',
        '',
      ],
    },
    init: func.init,
    onPageInit: func.onPageInit,
    fromProcessState: {
      processName: 'workbench',
      variables: ['responseDescription'],
    },
  },
];

export default pageConfig;
